<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kebo.mybatis.mapper.StudentMapper">

    <!-- resultMap标签:映射实体与表
         type属性：表示实体全路径名
         id属性：为实体与表的映射取一个任意的唯一的名字
    -->
    <resultMap type="com.kebo.mybatis.po.Student" id="studentMap">
        <!-- id标签:映射主键属性
             result标签：映射非主键属性
             property属性:实体的属性名
             column属性：表的字段名
        -->
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="sal" column="sal"/>
    </resultMap>

    <select id="selectById" parameterType="Integer" resultMap="studentMap">
        select * from students where id = #{id}
    </select>

    <insert id="insert" parameterType="com.kebo.mybatis.po.Student">
        INSERT INTO students (ID, NAME, SAL) VALUES (#{id},#{name},#{sal})
    </insert>

    <select id="findAll" resultMap="studentMap">
        SELECT * FROM STUDENTS
    </select>

    <!--根据id删除-->
    <delete id="delete" parameterType="int">
        DELETE FROM STUDENTS WHERE id=#{id}
    </delete>

    <!--更新-->
    <update id="update" parameterType="com.kebo.mybatis.po.Student">
        update students set name=#{name},sal=#{sal} where id=#{id}
    </update>

    <select id="findByCondition" resultMap="studentMap" parameterType="map">
        select * from students
        <where>
            <if test="name!=null">
                and name=#{name}
            </if>
            <if test="sal!=null">
                and sal &lt; #{sal}
            </if>
        </where>
    </select>

    <!--动态更新-->
    <!--不要忘了逗号-->
    <update id="updateByConditions" parameterType="map">
        update students
        <set>
            <if test="name!=null">
                name = #{name},
            </if>
            <if test="sal!=null">
                sal = #{sal},
            </if>
        </set>
        where id = #{id}
    </update>


    <delete id="deleteByConditions" parameterType="java.util.List">
        <!-- foreach⽤于迭代数组元素
        open表示开始符号
       删除编号为2，3，4的记录
        close表示结束符合
        separator表示元素间的分隔符
        item表示迭代的数组，属性值可以任意，但提倡与⽅法的数组名相同
        #{ids}表示数组中的每个元素值
        -->
        delete from students where id in
        <foreach collection="list" open="(" close=")" separator="," item="ids">
            #{ids}
        </foreach>
    </delete>

    <!--SQL⽚段默认是不帮我们⾃动⽣成合适的SQL，因此需要我们⾃⼰⼿动除去逗号-->
    <sql id="key">
        <trim suffixOverrides=",">
            <if test="id!=null">
                id,
            </if>
            <if test="id!=null">
                name,
            </if>
            <if test="id!=null">
                sal,
            </if>
        </trim>
    </sql>
    <sql id="value">
        <trim suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="id!=null">
                #{name},
            </if>
            <if test="id!=null">
                #{sal},
            </if>
        </trim>
    </sql>
    <!--动态插⼊-->
    <insert id="insertByConditions" parameterType="com.kebo.mybatis.po.Student">

        insert into students (<include refid="key"/>) values
        (<include refid="value"/>)
    </insert>

</mapper>